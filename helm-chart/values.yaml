# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: adminmindgrep/orchestrator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: '7804543005'

imagePullSecrets: []
name: ""
nameOverride: "orchestrator"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  godspeed.systems/collection_interval: 30s
  godspeed.systems/port: "3000"
  godspeed.systems/scrape: "true"

  # vault.hashicorp.com/agent-inject: 'true'
  # vault.hashicorp.com/role: 'vault-role'
  # vault.hashicorp.com/agent-inject-secret-app-credentials.sh: 'internal/data/database/config'
  # vault.hashicorp.com/agent-inject-template-app-credentials.sh: |
  #    #!/bin/bash
  #   {{- with secret "internal/data/database/config" -}}
  #   export brokers={{ .Data.data.db_host }}
  #   export clientid={{ .Data.data.db_host }}
  #   {{- end -}}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/enable-cors: "true"    
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.godspeed.systems, http://localhost:3003, https://*.preview.csb.app" 
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE,  PATCH
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_origin ~* "http.?:\/\/(.*\.)?(localhost:3003|godspeed\.systems).*$") {
        add_header "Access-Control-Allow-Origin" '$http_origin' always;
        add_header "Access-Control-Allow-Methods" "GET, PUT, POST, OPTIONS" always;
        add_header "Access-Control-Allow-Headers" "DNT,X-CustomHeader,Keep-Alive,User-Agent, Range, X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization" always;
        add_header "Access-Control-Expose-Headers" "Content-Length,Content-Range";
      }
      if ($uri ~* "/socket.io/") {
        add_header "Access-Control-Allow-Origin" "" always;
      }      
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: demo.godspeed.systems	
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

secrets:
  enabled: false
  data: 
    username1: avtar
    username2: rishabh


existingsecret:
  enabled: true
  name: db-creds


env:
  data: 
    OTEL_SERVICE_NAME: orchestrator
    OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector.monitoring.svc:4317
    RESTAURANT_BASE_URL: http://restaurant.app.svc
    DELIVERY_BASE_URL: http://delivery.app.svc
    KAFKA_CLIENT_ID: orchestrator

containerPort: 3000

nodeSelector: {}

tolerations: []

affinity: {}
